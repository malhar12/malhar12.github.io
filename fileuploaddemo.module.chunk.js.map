{"version":3,"sources":["D:/PrimeNG/primeng/src/app/components/fileupload/fileupload.ts","D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.html","D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"names":[],"mappings":"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","file":"fileuploaddemo.module.chunk.js","sourcesContent":["import {NgModule,Component,OnInit,OnDestroy,Input,Output,EventEmitter,TemplateRef,AfterViewInit,AfterContentInit,\r\n            ContentChildren,QueryList,ViewChild,ElementRef,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {ButtonModule} from '../button/button';\r\nimport {MessagesModule} from '../messages/messages';\r\nimport {ProgressBarModule} from '../progressbar/progressbar';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {Message} from '../common/message';\r\nimport {PrimeTemplate,SharedModule} from '../common/shared';\r\nimport {BlockableUI} from '../common/blockableui';\r\n\r\n@Component({\r\n    selector: 'p-fileUpload',\r\n    template: `\r\n        <div [ngClass]=\"'ui-fileupload ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"mode === 'advanced'\">\r\n            <div class=\"ui-fileupload-buttonbar ui-widget-header ui-corner-top\">\r\n                <span class=\"ui-fileupload-choose\" [label]=\"chooseLabel\" icon=\"fa-plus\" pButton [ngClass]=\"{'ui-state-focus': focus}\"> \r\n                    <input #advancedfileinput type=\"file\" (change)=\"onFileSelect($event)\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n                </span>\r\n\r\n                <button *ngIf=\"!auto&&showUploadButton\" type=\"button\" [label]=\"uploadLabel\" icon=\"fa-upload\" pButton (click)=\"upload()\" [disabled]=\"!hasFiles()\"></button>\r\n                <button *ngIf=\"!auto&&showCancelButton\" type=\"button\" [label]=\"cancelLabel\" icon=\"fa-close\" pButton (click)=\"clear()\" [disabled]=\"!hasFiles()\"></button>\r\n            \r\n                <ng-container *ngTemplateOutlet=\"toolbarTemplate\"></ng-container>\r\n            </div>\r\n            <div #content [ngClass]=\"{'ui-fileupload-content ui-widget-content ui-corner-bottom':true}\" \r\n                (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\">\r\n                <p-progressBar [value]=\"progress\" [showValue]=\"false\" *ngIf=\"hasFiles()\"></p-progressBar>\r\n                \r\n                <p-messages [value]=\"msgs\"></p-messages>\r\n                \r\n                <div class=\"ui-fileupload-files\" *ngIf=\"hasFiles()\">\r\n                    <div *ngIf=\"!fileTemplate\">\r\n                        <div class=\"ui-fileupload-row\" *ngFor=\"let file of files; let i = index;\">\r\n                            <div><img [src]=\"file.objectURL\" *ngIf=\"isImage(file)\" [width]=\"previewWidth\" /></div>\r\n                            <div>{{file.name}}</div>\r\n                            <div>{{formatSize(file.size)}}</div>\r\n                            <div><button type=\"button\" icon=\"fa-close\" pButton (click)=\"remove($event,i)\"></button></div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"fileTemplate\">\r\n                        <ng-template ngFor [ngForOf]=\"files\" [ngForTemplate]=\"fileTemplate\"></ng-template>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n        <span class=\"ui-button ui-fileupload-choose ui-widget ui-state-default ui-corner-all ui-button-text-icon-left\" *ngIf=\"mode === 'basic'\" \r\n        (mouseup)=\"onSimpleUploaderClick($event)\"\r\n        [ngClass]=\"{'ui-fileupload-choose-selected': hasFiles(),'ui-state-focus': focus}\">\r\n            <span class=\"ui-button-icon-left fa\" [ngClass]=\"{'fa-plus': !hasFiles()||auto, 'fa-upload': hasFiles()&&!auto}\"></span>\r\n            <span class=\"ui-button-text ui-clickable\">{{auto ? chooseLabel : hasFiles() ? files[0].name : chooseLabel}}</span>\r\n            <input #basicfileinput type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" [disabled]=\"disabled\"\r\n                (change)=\"onFileSelect($event)\" *ngIf=\"!hasFiles()\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n        </span>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class FileUpload implements OnInit,AfterViewInit,AfterContentInit,OnDestroy,BlockableUI {\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() url: string;\r\n\r\n    @Input() method: string = 'POST';\r\n\r\n    @Input() multiple: boolean;\r\n\r\n    @Input() accept: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() auto: boolean;\r\n\r\n    @Input() withCredentials: boolean;\r\n\r\n    @Input() maxFileSize: number;\r\n\r\n    @Input() invalidFileSizeMessageSummary: string = '{0}: Invalid file size, ';\r\n\r\n    @Input() invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.';\r\n\r\n    @Input() invalidFileTypeMessageSummary: string = '{0}: Invalid file type, ';\r\n\r\n    @Input() invalidFileTypeMessageDetail: string = 'allowed file types: {0}.';\r\n\r\n    @Input() style: string;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() previewWidth: number = 50;\r\n\r\n    @Input() chooseLabel: string = 'Choose';\r\n\r\n    @Input() uploadLabel: string = 'Upload';\r\n\r\n    @Input() cancelLabel: string = 'Cancel';\r\n\r\n    @Input() showUploadButton: boolean = true;\r\n\r\n    @Input() showCancelButton: boolean = true;\r\n\r\n    @Input() mode: string = 'advanced';\r\n\r\n    @Input() customUpload: boolean;\r\n\r\n    @Output() onBeforeUpload: EventEmitter<any> = new EventEmitter();\r\n\r\n\t@Output() onBeforeSend: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onUpload: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onError: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onRemove: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onProgress: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() uploadHandler: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild('advancedfileinput') advancedFileInput: ElementRef;\r\n\r\n    @ViewChild('basicfileinput') basicFileInput: ElementRef;\r\n\r\n    @ViewChild('content') content: ElementRef;\r\n\r\n    @Input() files: File[];\r\n\r\n    public progress: number = 0;\r\n\r\n    public dragHighlight: boolean;\r\n\r\n    public msgs: Message[];\r\n\r\n    public fileTemplate: TemplateRef<any>;\r\n\r\n    public contentTemplate: TemplateRef<any>;\r\n\r\n    public toolbarTemplate: TemplateRef<any>;\r\n\r\n    focus: boolean;\r\n\r\n    duplicateIEEvent: boolean;  // flag to recognize duplicate onchange event for file input\r\n\r\n    constructor(private el: ElementRef, public domHandler: DomHandler, public sanitizer: DomSanitizer, public zone: NgZone){}\r\n\r\n    ngOnInit() {\r\n        this.files = [];\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'file':\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n\r\n                case 'toolbar':\r\n                    this.toolbarTemplate = item.template;\r\n                break;\r\n\r\n                default:\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if(this.mode === 'advanced') {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.content.nativeElement.addEventListener('dragover', this.onDragOver.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileSelect(event) {\r\n        if(event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\r\n            this.duplicateIEEvent = false;\r\n            return;\r\n        }\r\n\r\n        this.msgs = [];\r\n        if(!this.multiple) {\r\n            this.files = [];\r\n        }\r\n\r\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n        for(let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n\r\n            if(!this.isFileSelected(file)){\r\n              if(this.validate(file)) {\r\n                  if(this.isImage(file)) {\r\n                      file.objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\r\n                  }\r\n\r\n                  this.files.push(files[i]);\r\n              }\r\n            }\r\n        }\r\n\r\n        this.onSelect.emit({originalEvent: event, files: files});\r\n\r\n        if(this.hasFiles() && this.auto) {\r\n            this.upload();\r\n        }\r\n\r\n        if (event.type !== 'drop' && this.isIE11()) {\r\n          this.clearIEInput();\r\n        } else {\r\n          this.clearInputElement();\r\n        }\r\n    }\r\n\r\n    isFileSelected(file: File): boolean{\r\n        for(let sFile of this.files){\r\n            if((sFile.name + sFile.type + sFile.size) === (file.name + file.type+file.size)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isIE11() {\r\n        return !!window['MSInputMethodContext'] && !!document['documentMode'];\r\n    }\r\n\r\n    validate(file: File): boolean {\r\n        if(this.accept && !this.isFileTypeValid(file)) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\r\n                detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(this.maxFileSize  && file.size > this.maxFileSize) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\r\n                detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private isFileTypeValid(file: File): boolean {\r\n        let acceptableTypes = this.accept.split(',');\r\n        for(let type of acceptableTypes) {\r\n            let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\r\n                                                    : file.type == type || this.getFileExtension(file) === type;\r\n\r\n            if(acceptable) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTypeClass(fileType: string): string {\r\n        return fileType.substring(0, fileType.indexOf('/'));\r\n    }\r\n\r\n    isWildcard(fileType: string): boolean {\r\n        return fileType.indexOf('*') !== -1;\r\n    }\r\n\r\n    getFileExtension(file: File): string {\r\n        return '.' + file.name.split('.').pop();\r\n    }\r\n\r\n    isImage(file: File): boolean {\r\n        return /^image\\//.test(file.type);\r\n    }\r\n\r\n    onImageLoad(img: any) {\r\n        window.URL.revokeObjectURL(img.src);\r\n    }\r\n\r\n    upload() {\r\n        if(this.customUpload) {\r\n            this.uploadHandler.emit({\r\n                files: this.files\r\n            });\r\n        }\r\n        else {\r\n            this.msgs = [];\r\n            let xhr = new XMLHttpRequest(),\r\n            formData = new FormData();\r\n\r\n            this.onBeforeUpload.emit({\r\n                'xhr': xhr,\r\n                'formData': formData\r\n            });\r\n\r\n            for(let i = 0; i < this.files.length; i++) {\r\n                formData.append(this.name, this.files[i], this.files[i].name);\r\n            }\r\n\r\n            xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n                if(e.lengthComputable) {\r\n                  this.progress = Math.round((e.loaded * 100) / e.total);\r\n                }\r\n\r\n                this.onProgress.emit({originalEvent: e, progress: this.progress});\r\n              }, false);\r\n\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState == 4) {\r\n                    this.progress = 0;\r\n\r\n                    if(xhr.status >= 200 && xhr.status < 300)\r\n                        this.onUpload.emit({xhr: xhr, files: this.files});\r\n                    else\r\n                        this.onError.emit({xhr: xhr, files: this.files});\r\n\r\n                    this.clear();\r\n                }\r\n            };\r\n\r\n            xhr.open(this.method, this.url, true);\r\n\r\n            this.onBeforeSend.emit({\r\n                'xhr': xhr,\r\n                'formData': formData\r\n            });\r\n\r\n            xhr.withCredentials = this.withCredentials;\r\n\r\n            xhr.send(formData);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.files = [];\r\n        this.onClear.emit();\r\n        this.clearInputElement();\r\n    }\r\n\r\n    remove(event: Event, index: number) {\r\n        this.clearInputElement();\r\n        this.onRemove.emit({originalEvent: event, file: this.files[index]});\r\n        this.files.splice(index, 1);\r\n    }\r\n\r\n    clearInputElement() {\r\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\r\n        this.advancedFileInput.nativeElement.value = '';\r\n      }\r\n    }\r\n\r\n    clearIEInput() {\r\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\r\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\r\n        this.advancedFileInput.nativeElement.value = '';\r\n      }\r\n    }\r\n\r\n    hasFiles(): boolean {\r\n        return this.files && this.files.length > 0;\r\n    }\r\n\r\n    onDragEnter(e) {\r\n        if(!this.disabled) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragOver(e) {\r\n        if(!this.disabled) {\r\n            this.domHandler.addClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n            this.dragHighlight = true;\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        if(!this.disabled) {\r\n            this.domHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n        }\r\n    }\r\n\r\n    onDrop(event) {\r\n        if(!this.disabled) {\r\n            this.domHandler.removeClass(this.content.nativeElement, 'ui-fileupload-highlight');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n            let allowDrop = this.multiple||(files && files.length === 1);\r\n\r\n            if(allowDrop) {\r\n                this.onFileSelect(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n\r\n    onBlur() {\r\n        this.focus = false;\r\n    }\r\n\r\n    formatSize(bytes) {\r\n        if(bytes == 0) {\r\n            return '0 B';\r\n        }\r\n        let k = 1000,\r\n        dm = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    onSimpleUploaderClick(event: Event) {\r\n        if(this.hasFiles()) {\r\n            this.upload();\r\n        }\r\n    }\r\n\r\n    getBlockableElement(): HTMLElement {\r\n      return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.content && this.content.nativeElement) {\r\n            this.content.nativeElement.removeEventListener('dragover', this.onDragOver);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    exports: [FileUpload,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    declarations: [FileUpload]\r\n})\r\nexport class FileUploadModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/PrimeNG/primeng/src/app/components/fileupload/fileupload.ts","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: FileUploadDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class FileUploadDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">FileUpload</span>\\r\\n        <span>FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and\\r\\n            validations.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n        \\r\\n    <h3 class=\\\"first\\\">Advanced</h3>\\r\\n    <p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\r\\n            multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"> \\r\\n            <ng-template pTemplate=\\\"content\\\">\\r\\n                <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                    <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                </ul>\\r\\n            </ng-template>    \\r\\n    </p-fileUpload>\\r\\n    \\r\\n    <h3>Basic</h3>\\r\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\r\\n    \\r\\n    <h3>Basic with Auto</h3>\\r\\n    <p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"></p-fileUpload>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;FileUploadModule&#125; from 'primeng/fileupload';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>FileUpload requires a url property as the upload target and a name to identify the files at backend.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Multiple Uploads</h3>\\r\\n            <p>Only one file can be selected at a time, to allow selecting multiples enable multiple option.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>DragDrop</h3>\\r\\n            <p>File selection can also be done by dragging and dropping one or more to the content section of the component.</p>\\r\\n            \\r\\n            <h3>Auto Uploads</h3>\\r\\n            <p>When auto property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" auto=\\\"auto\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Types</h3>\\r\\n            <p>Selectable file types can be restricted with accept property, example below only allows images to be uploaded.\\r\\n            Read more about other possible values <a href=\\\"http://www.w3schools.com/tags/att_input_accept.asp\\\">here</a>.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Size</h3>\\r\\n            <p>Maximium file size can be restricted using maxFileSize property defined in bytes.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>In order to customize the default messages use invalidFileSizeMessageSummary and invalidFileSizeMessageDetail options. \\r\\n            In summary &#123;0&#125; placeholder refers to the filename and in detail, file size.</p>\\r\\n            <ul>\\r\\n                <li>invalidFileSizeMessageSummary: '&#123;0&#125;: Invalid file size, '</li>\\r\\n                <li>invalidFileSizeMessageDetail: string = 'maximum upload size is &#123;0&#125;.'</li>\\r\\n            </ul>\\r\\n            \\r\\n            <h3>Templating</h3>\\r\\n            <p>File list UI is customizable using a ng-template called \\\"file\\\" that gets the <a href=\\\"https://www.w3.org/TR/FileAPI/\\\">File</a> instance as the implicit variable.\\r\\n                Second ng-template named \\\"content\\\" can be used to place custom content inside the content section which would be useful to implement a user interface to manage the uploaded files such as removing them.  \\r\\n                Third and final ng-template option is \\\"toolbar\\\" to display custom content at toolbar.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n        &lt;ng-template pTemplate=\\\"toolbar\\\"&gt;\\r\\n            &lt;div&gt;Upload 3 Files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;  \\r\\n        &lt;ng-template let-file pTemplate=\\\"file\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to display a file&lt;/div&gt;\\r\\n        &lt;/ng-template&gt; \\r\\n        &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to manage uploaded files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;  \\r\\n&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Request Customization</h3>\\r\\n            <p>XHR request to upload the files can be customized using the onBeforeUpload callback that passes\\r\\n                the xhr instance and FormData object as event parameters.</p>\\r\\n                \\r\\n            <h3>Basic UI</h3>\\r\\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\" auto=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Custom Upload</h3>\\r\\n            <p>Uploading implementation can be overriden by enabling customMode property and defining a custom upload handler event.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"myUploader($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nmyUploader(event) &#123;\\r\\n    //event.files == files to upload\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n            \\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>name</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the request parameter to identify the files at backend.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>url</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Remote url to upload the files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>method</td>\\r\\n                            <td>string</td>\\r\\n                            <td>POST</td>\\r\\n                            <td>HTTP method to send the files to the url.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>multiple</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Used to select multiple files at once from file dialog.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>accept</td>\\r\\n                            <td>string</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Pattern to restrict the allowed file types such as \\\"image/*\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Disables the upload functionality.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>auto</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>maxFileSize</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Maximum file size allowed in bytes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file size, \\\"</td>\\r\\n                            <td>Summary message of the invalid fize size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"maximum upload size is &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid fize size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file type, \\\"</td>\\r\\n                            <td>Summary message of the invalid fize type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"allowed file types: &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid fize type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>previewWidth</td>\\r\\n                            <td>number</td>\\r\\n                            <td>50</td>\\r\\n                            <td>Width of the image thumbnail in pixels.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>chooseLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Choose</td>\\r\\n                            <td>Label of the choose button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Upload</td>\\r\\n                            <td>Label of the upload button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>cancelLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Cancel</td>\\r\\n                            <td>Label of the cancel button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>withCredentials</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>mode</td>\\r\\n                            <td>string</td>\\r\\n                            <td>advanced</td>\\r\\n                            <td>Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>customUpload</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\\r\\n                        </tr>\\r\\n                      <tr>\\r\\n                            <td>showUploadButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of upload button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>showCancelButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of cancel button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>files</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>List of files to be provide to the FileUpload externally.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onBeforeUpload</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\r\\n                                event.formData: FormData object.</td>\\r\\n                            <td>Callback to invoke before file upload begins to customize the request\\r\\n                                such as post parameters before the files.</td>\\r\\n                        </tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n                            <td>onBeforeSend</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\r\\n                                event.formData: FormData object.</td>\\r\\n                            <td>Callback to invoke before file send begins to customize the request\\r\\n                                such as adding headers.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onUpload</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\r\\n                                event.files: Uploaded files.</td>\\r\\n                            <td>Callback to invoke when file upload is complete.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onError</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\r\\n                                event.files: Files that are not uploaded.</td>\\r\\n                            <td>Callback to invoke if file upload fails.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onClear</td>\\r\\n                            <td>-.</td>\\r\\n                            <td>Callback to invoke when files in queue are removed without uploading using clear all button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onRemove</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.file: Selected file.</td>\\r\\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSelect</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke when files are selected.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onProgress</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.progress: Calculated progress value.</td>\\r\\n                            <td>Callback to invoke when files are selected.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadHandler</td>\\r\\n                            <td>event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>upload</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Uploads the selected files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>clear</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Clears the files list.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-buttonbar</td>\\r\\n                            <td>Header containing the buttons</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-content</td>\\r\\n                            <td>Content section</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fileupload\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\r\\n    \\r\\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\r\\n&lt;p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\r\\n        multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n    &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n        &lt;ul *ngIf=\\\"uploadedFiles.length\\\"&gt;\\r\\n            &lt;li *ngFor=\\\"let file of uploadedFiles\\\"&gt;&#123;&#123;file.name&#125;&#125; - &#123;&#123;file.size&#125;&#125; bytes&lt;/li&gt;\\r\\n        &lt;/ul&gt;\\r\\n    &lt;/ng-template&gt;        \\r\\n&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic with Auto&lt;/h3&gt;\\r\\n&lt;p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class FileUploadDemo &#123;\\r\\n\\r\\n    msgs: Message[];\\r\\n    \\r\\n    uploadedFiles: any[] = [];\\r\\n\\r\\n    onUpload(event) &#123;\\r\\n        for(let file of event.files) &#123;\\r\\n            this.uploadedFiles.push(file);\\r\\n        &#125;\\r\\n    \\r\\n        this.msgs = [];\\r\\n        this.msgs.push(&#123;severity: 'info', summary: 'File Uploaded', detail: ''&#125;);\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.html\n// module id = ../../../../../src/app/showcase/components/fileupload/fileuploaddemo.html\n// module chunks = fileuploaddemo.module","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\nimport {FileUploadDemoRoutingModule} from './fileuploaddemo-routing.module';\r\nimport {FileUploadModule} from '../../../components/fileupload/fileupload';\r\nimport {GrowlModule} from '../../../components/growl/growl';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFileUploadDemoRoutingModule,\r\n        FileUploadModule,\r\n        GrowlModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tFileUploadDemo\r\n\t]\r\n})\r\nexport class FileUploadDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","import {Component} from '@angular/core';\r\nimport {Message} from '../../../components/common/api';\r\n\r\n@Component({\r\n    templateUrl: './fileuploaddemo.html'\r\n})\r\nexport class FileUploadDemo {\r\n\r\n    msgs: Message[];\r\n    \r\n    uploadedFiles: any[] = [];\r\n\r\n    onUpload(event) {\r\n        for(let file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n    \r\n    onBasicUpload(event) {        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n    \r\n    onBasicUploadAuto(event) {        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/PrimeNG/primeng/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"sourceRoot":"webpack:///"}